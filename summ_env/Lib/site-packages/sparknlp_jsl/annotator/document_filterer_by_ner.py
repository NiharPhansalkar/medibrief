from sparknlp_jsl.annotator import WhiteBlackListParams
from sparknlp_jsl.common import *


class DocumentFiltererByNER(AnnotatorModelInternal, WhiteBlackListParams):
    """Filters documents by the entity fields of the chunks.
    Documents are filtered by the white list and black list.
    The white list is a list of  entities that are allowed to pass the filter.
    The black list is a list of entities that are not allowed to pass the filter.
    The filter is case sensitive. If the caseSensitive is set to false, the filter is case in-sensitive.

    ========================  =======================
    Input Annotation Types    Output Annotation Type
    ========================  =======================
    ``DOCUMENT, CHUNK``       ``DOCUMENT``
    ========================  =======================

    Notes
    -----
        A document may contain multiple chunks.
        If any of the chunks in the document is in the white list, the document will pass the filter.
        And white list has priority over black list.

    Parameters
    ----------
    blackList: list
        If defined, list of entities to ignore. The rest will be processed.
    whiteList: list
        If defined, list of entities to process. The rest will be ignored.
    caseSensitive: bool
        Determines whether the definitions of the white listed and black listed entities are case sensitive or not.
    outputAsDocument: bool
        Whether to return all sentences joined into a single document. Default is False.
    joinString: str
        This parameter specifies the string that will be inserted between results of documents 
        when combining them into a single result if outputAsDocument is set to True.
        Default is " ".


    Examples
    --------
    >>> from sparknlp.base import *
    >>> from sparknlp.annotator import *
    >>> from sparknlp_jsl.annotator import *
    >>> from pyspark.ml import Pipeline
    >>> documentAssembler = DocumentAssembler().setInputCol("text").setOutputCol("document")
    >>> sentenceDetector = SentenceDetectorDLModel.pretrained("sentence_detector_dl_healthcare", "en", "clinical/models") \\
    ...     .setInputCols("document").setOutputCol("sentence")
    >>> tokenizer = Tokenizer().setInputCols("sentence").setOutputCol("token")
    >>> word_embeddings = WordEmbeddingsModel.pretrained("embeddings_clinical", "en", "clinical/models") \\
    ...     .setInputCols(["sentence", "token"]).setOutputCol("embeddings")
    >>> ner_jsl = MedicalNerModel.pretrained("ner_jsl", "en", "clinical/models") \\
    ...     .setInputCols(["sentence", "token", "embeddings"]).setOutputCol("ner")
    >>> ner_converter = NerConverterInternal() \\
    ...     .setInputCols(["sentence", "token", "ner"]).setOutputCol("ner_chunk")
    >>> filterer = DocumentFiltererByNER() \\
    ...     .setInputCols(["sentence", "ner_chunk"])\\
    ...     .setOutputCol("filterer")\\
    ...     .setWhiteList(["Disease_Syndrome_Disorder"])\\
    ...     .setCaseSensitive(False)
    >>> data = spark.createDataFrame([["Coronavirus disease (COVID-19) is an infectious disease caused by the SARS-CoV-2 virus." +
    ...        "Most people infected with the virus will experience mild to moderate respiratory illness and recover without requiring special treatment." +
    ...        "However, some will become seriously ill and require medical attention. " +
    ...        "Older people and those with underlying medical conditions like cardiovascular disease, diabetes, chronic respiratory disease, or cancer are more likely to develop serious illness." +
    ...        "Anyone can get sick with COVID-19 and become seriously ill or die at any age." +
    ...        "The best way to prevent and slow down transmission is to be well informed about the disease and how the virus spreads." +
    ...        "Protect yourself and others from infection by staying at least 1 metre apart from others, wearing a properly fitted mask, and washing your hands or using an alcohol-based rub frequently." +
    ...        "Get vaccinated when it’s your turn and follow local guidance." +
    ...        "The virus can spread from an infected person’s mouth or nose in small liquid particles when they cough, sneeze, speak, sing or breathe. " +
    ...        "These particles range from larger respiratory droplets to smaller aerosols. It is important to practice respiratory etiquette, for example by coughing into a flexed elbow, and to stay home and self-isolate until you recover if you feel unwell."
    ...     ]]).toDF("text")
    >>> pipeline = Pipeline()\\
    ...     .setStages([documentAssembler, sentenceDetector, tokenizer, word_embeddings, ner_jsl, ner_converter, filterer])
    >>> result = pipeline.fit(data).transform(data)
    >>> result.selectExpr("explode(filterer) as filter").show(truncate=False)
    +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |filter                                                                                                                                                                                                                               |
    +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
    |{document, 0, 86, Coronavirus disease (COVID-19) is an infectious disease caused by the SARS-CoV-2 virus., {sentence -> 0}, []}                                                                                                      |
    |{document, 87, 223, Most people infected with the virus will experience mild to moderate respiratory illness and recover without requiring special treatment., {sentence -> 1}, []}                                                  |
    |{document, 295, 473, Older people and those with underlying medical conditions like cardiovascular disease, diabetes, chronic respiratory disease, or cancer are more likely to develop serious illness., {sentence -> 3}, []}       |
    |{document, 669, 854, Protect yourself and others from infection by staying at least 1 metre apart from others, wearing a properly fitted mask, and washing your hands or using an alcohol-based rub frequently., {sentence -> 6}, []}|
    |{document, 916, 1050, The virus can spread from an infected person’s mouth or nose in small liquid particles when they cough, sneeze, speak, sing or breathe., {sentence -> 8}, []}                                                  |
    +-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

    """
    name = "DocumentFiltererByNER"
    inputAnnotatorTypes = [AnnotatorType.DOCUMENT, AnnotatorType.CHUNK]
    outputAnnotatorType = AnnotatorType.DOCUMENT

    outputAsDocument = Param(Params._dummy(),
                             "outputAsDocument",
                             "Whether to return all sentences joined into a single document",
                             TypeConverters.toBoolean)

    joinString = Param(Params._dummy(),
                       "joinString",
                       "This parameter specifies the string that will be inserted between results of annotations when combining them into a single result if outputAsDocument is set to true.",
                       typeConverter=TypeConverters.toString)

    def __init__(self, classname="com.johnsnowlabs.nlp.annotators.DocumentFiltererByNER", java_model=None):
        super(DocumentFiltererByNER, self).__init__(
            classname=classname,
            java_model=java_model
        )
