"""Contains Class for ContextSplitAssembler"""
import json

from sparknlp_jsl.common import *
from sparknlp_jsl.utils.licensed_annotator_type import InternalAnnotatorType

class ContextSplitAssembler(AnnotatorModelInternal):
    """
    Converts and assembles `VECTOR_SIMILARITY_RANKINGS` type annotations into `DOCUMENT` type.
    The input annotations are expected to be of type `VECTOR_SIMILARITY_RANKINGS` and the output annotation type is `DOCUMENT`.
    It concatenates the results of the input annotations into a single result, separated by a join string.
    When `explodeSplits` is set to True, the splits are exploded into separate annotations.
    `joinString` parameter is used to add the delimiter between results of annotations when combining them into a single result.

    ================================   ==========================
    Input Annotation types             Output Annotation type
    ================================   ==========================
    ``VECTOR_SIMILARITY_RANKINGS``          ``DOCUMENT``
    ================================   ==========================

    Parameters
    ----------
    joinString : str
        This parameter specifies the string that will be inserted between results of annotations when combining them into a single result.
        It acts as a delimiter, ensuring that the elements are properly separated and organized in the final result of annotation.
        Default: " ".
    explodeSplits : bool
        Whether to explode the splits into separate annotations or not.
        Default: False.

    """

    name = "ContextSplitAssembler"
    inputAnnotatorTypes = [InternalAnnotatorType.VECTOR_SIMILARITY_RANKINGS]
    outputAnnotatorType = AnnotatorType.DOCUMENT

    joinString = Param(Params._dummy(),
                       "joinString",
                       "This parameter specifies the string that will be inserted between results of annotations when combining them into a single result.",
                       typeConverter=TypeConverters.toString)

    explodeSplits = Param(Params._dummy(),
                          "explodeSplits",
                          "Whether to explode the splits into separate annotations or not",
                          typeConverter=TypeConverters.toBoolean)

    def __init__(self, classname="com.johnsnowlabs.nlp.annotators.rag.ContextSplitAssembler", java_model=None):
        super(ContextSplitAssembler, self).__init__(
            classname=classname,
            java_model=java_model
        )

    def setJoinString(self, value: str):
        """Sets the value of :py:attr:`joinString`.
        This parameter specifies the string that will be inserted between results of annotations when combining them into a single result.
        It acts as a delimiter, ensuring that the elements are properly separated and organized in the final result of annotation.
        Default: " ".

        Parameters
        ----------
        value : str
            This parameter specifies the string that will be inserted between results of annotations when combining them into a single result.
        """
        return self._set(joinString=value)

    def setExplodeSplits(self, value: bool):
        """Sets the value of :py:attr:`explodeSplits`.
        Whether to explode the splits into separate annotations or not.
        Default: False.

        Parameters
        ----------
        value : bool
            Whether to explode the splits into separate annotations or not.
        """
        return self._set(explodeSplits=value)
