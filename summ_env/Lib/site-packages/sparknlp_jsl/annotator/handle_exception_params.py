from sparknlp_jsl.common import *


class HandleExceptionParams:
    """
    Configuration parameters for handling exceptions during processing.
    """


    doExceptionHandling = Param(Params._dummy(), "doExceptionHandling","""If true, exceptions are handled.
    If exception causing data is passed to the model, a error annotation is emitted which has the exception message.
    Processing continues with the next one.
    This comes with a performance penalty.""",TypeConverters.toBoolean)

    def setDoExceptionHandling(self, value: bool):
        """If True, exceptions are handled.
        If exception causing data is passed to the model, a error annotation is emitted which has the exception message.
        Processing continues with the next one. This comes with a performance penalty.

        Parameters
        ----------
        value : bool
            If True, exceptions are handled.

        """
        return self._set(doExceptionHandling=value)
