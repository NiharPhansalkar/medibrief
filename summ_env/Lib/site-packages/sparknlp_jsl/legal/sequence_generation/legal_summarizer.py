from sparknlp_jsl.common import *
from sparknlp_jsl.annotator import MedicalSummarizer as A


class LegalSummarizer(A):
    name = "LegalSummarizer"

    @keyword_only
    def __init__(self, classname="com.johnsnowlabs.legal.sequence_generation.LegalSummarizer", java_model=None):
        super(LegalSummarizer, self).__init__(
            classname=classname,
            java_model=java_model
        )

        self._setDefault(
            task="summarize: "
        )

    @staticmethod
    def loadSavedModel(folder, spark_session, use_cache):
        """Loads a locally saved model.

        Parameters
        ----------
        folder : str
            Folder of the saved model
        spark_session : pyspark.sql.SparkSession
            The current SparkSession
        use_cache: bool
            The model uses caching to facilitate performance

        Returns
        -------
        LegalSummarizer
            The restored model
        """
        from sparknlp_jsl.internal import _LegalSummarizerLoader
        jModel = _LegalSummarizerLoader(folder, spark_session._jsparkSession, use_cache)._java_obj
        return LegalSummarizer(java_model=jModel)

    @staticmethod
    def pretrained(name="legsum_flant5_legal_augmented", lang="en", remote_loc="legal/models"):
        """Downloads and loads a pretrained model.

        Parameters
        ----------
        name : str, optional
            Name of the pretrained model, by default "legsum_flant5_legal_augmented"
        lang : str, optional
            Language of the pretrained model, by default "en"
        remote_loc : str, optional
            Optional remote address of the resource, by default None. Will use
            Spark NLPs repositories otherwise.

        Returns
        -------
        LegalSummarizer
            The restored model
        """
        from sparknlp_jsl.pretrained import InternalResourceDownloader
        return InternalResourceDownloader.downloadModel(LegalSummarizer, name, lang, remote_loc,
                                                        j_dwn='InternalsPythonResourceDownloader')