"""
Util functions for java wrapper
"""


def parse_str_to_dict(dict_str: str,
                      row_separator: str = "\n",
                      key_value_separator: str = ":",
                      is_value_list: bool = False,
                      value_separator: str = ","):
    """This function can parse a serialized java map to Python dict.
    :param dict_str: The string of the serialized java map.
    :param row_separator: The seperator of the elements in map.
    :param key_value_separator: The seperator between key and value.
    :param is_value_list: Whether value is list or not, by default False.
    :param value_separator: If the value is list, The separator of values.
    :return: deserialized Python dict.
    """
    _dict: dict = {}
    for t in dict_str.split(row_separator):
        key_value = t.split(key_value_separator)
        if len(key_value) == 2:
            key, value = key_value
            if is_value_list:
                value = value.split(value_separator)
            _dict[key] = value
    return _dict